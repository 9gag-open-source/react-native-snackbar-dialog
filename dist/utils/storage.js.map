{"version":3,"sources":["../../src/utils/storage.js"],"names":["STORAGE_NAMESPACE","KEY_CURRENT","KEY_QUEUE","Storage","getCurrent","getItem","setCurrent","item","setItem","removeCurrent","removeItem","getItems","hasItems","queue","Array","isArray","length","addToQueue","hasQueue","concat","setQueue","items"],"mappings":"wEAAA,yC;;AAEA,GAAMA,mBAAoB,UAA1B;AACA,GAAMC,aAAiBD,iBAAjB,WAAN;AACA,GAAME,WAAeF,iBAAf,SAAN,C;;AAEqBG,O,oDAAAA,O;AACZC,U,CAAa;AACL,0BAAaC,OAAb,CAAqBJ,WAArB,CADK,iH,CADDE,O;;;AAKZG,U,CAAa,kBAAOC,IAAP;AACL,0BAAaC,OAAb,CAAqBP,WAArB,CAAkCM,IAAlC,CADK,oH,CALDJ,O;;;AASZM,a,CAAgB;AACR,0BAAaC,UAAb,CAAwBT,WAAxB,CADQ,oH,CATJE,O;;;AAaZQ,Q,CAAW;AACH,0BAAaN,OAAb,CAAqBH,SAArB,CADG,oH,CAbCC,O;;;AAiBZS,Q,CAAW;AACI,0BAAaP,OAAb,CAAqBH,SAArB,CADJ,SACVW,KADU;AAETC,MAAMC,OAAN,CAAcF,KAAd,GAAwBA,MAAMG,MAFrB,4D,CAjBCb,O;;;AAsBZc,U,CAAa,kBAAOV,IAAP;AACE,0BAAaF,OAAb,CAAqBH,SAArB,CADF,SACZW,KADY;AAEZK,QAFY,CAEDJ,MAAMC,OAAN,CAAcF,KAAd,GAAwBA,MAAMG,MAF7B;AAGZ,0BAAaR,OAAb,CAAqBN,SAArB,CAAgCgB,SAAWL,MAAMM,MAAN,CAAaZ,IAAb,CAAX,CAAgCA,IAAhE,CAHY,4D,CAtBDJ,O;;;AA4BZiB,Q,CAAW,kBAAOC,KAAP;AACV,0BAAab,OAAb,CAAqBN,SAArB,CAAgCmB,KAAhC,CADU,4D,iBA5BClB,O","file":"storage.js","sourcesContent":["import { AsyncStorage } from 'react-native'\n\nconst STORAGE_NAMESPACE = 'SNACKBAR'\nconst KEY_CURRENT = `${STORAGE_NAMESPACE}:CURRENT`\nconst KEY_QUEUE = `${STORAGE_NAMESPACE}:QUEUE`\n\nexport default class Storage {\n  static getCurrent = async () => {\n    return await AsyncStorage.getItem(KEY_CURRENT)\n  }\n\n  static setCurrent = async (item) => {\n    return await AsyncStorage.setItem(KEY_CURRENT, item)\n  }\n\n  static removeCurrent = async () => {\n    return await AsyncStorage.removeItem(KEY_CURRENT)\n  }\n\n  static getItems = async () => {\n    return await AsyncStorage.getItem(KEY_QUEUE)\n  }\n\n  static hasItems = async () => {\n    const queue = await AsyncStorage.getItem(KEY_QUEUE)\n    return Array.isArray(queue) && queue.length\n  }\n\n  static addToQueue = async (item) => {\n    const queue = await AsyncStorage.getItem(KEY_QUEUE)\n    const hasQueue = Array.isArray(queue) && queue.length\n    await AsyncStorage.setItem(KEY_QUEUE, hasQueue ? queue.concat(item) : item)\n  }\n\n  static setQueue = async (items) => {\n    await AsyncStorage.setItem(KEY_QUEUE, items)\n  }\n}"]}