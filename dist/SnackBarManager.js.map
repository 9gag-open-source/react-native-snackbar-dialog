{"version":3,"sources":["../src/SnackBarManager.js"],"names":["SnackBarManager","_setCurrent","props","callback","current","dismiss","_removeCurrent","destroy","get","queue","add","title","options","push","show","unshift","length","shift"],"mappings":"yRAAA,4B;AACA,mE;;;AAGA,oC;;AAEqBA,e;;;;AAInB,0BAAe;;;;;AAKfC,WALe,CAKD,SAACC,KAAD,CAAgE,IAAzCC,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AAC5E,MAAKC,OAAL,CAAe,sCAAiB,6DAAcF,KAAd,EAAqB,cAAe,MAAKG,OAAzC,GAAjB,CAAuEF,QAAvE,CAAf;AACD,CAPc;;AASfG,cATe,CASE,UAA0C,IAAzCH,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AACzD,GAAI,CAAC,MAAKC,OAAV,CAAmB;AACjBD;AACA;AACD;;AAED,MAAKC,OAAL,CAAaG,OAAb,CAAqB,UAAM;AACzB,MAAKH,OAAL,CAAe,IAAf;AACAD;AACD,CAHD;AAID,CAnBc;;AAqBfK,GArBe,CAqBT,UAAM;AACV,MAAO;AACLJ,QAAS,MAAKA,OADT;AAELK,MAAO,MAAKA,KAFP,CAAP;;AAID,CA1Bc;;AA4BfC,GA5Be,CA4BT;AACJC,KADI;AAEJC,OAFI;;AAIK,IADTT,SACS,2DADa,UAAM,CAAE,CACrB;AACT,GAAMD,iBAAUS,WAAV,EAAoBC,OAApB,CAAN;;AAEA,GAAI,MAAKR,OAAT,CAAkB;AAChB,MAAKK,KAAL,CAAWI,IAAX,CAAgBX,KAAhB;AACAC;AACA;AACD;;AAED,MAAKF,WAAL,CAAiBC,KAAjB,CAAwBC,QAAxB;AACD,CA1Cc;;AA4CfW,IA5Ce,CA4CR;AACLH,KADK;AAELC,OAFK;;AAII,IADTT,SACS,2DADa,UAAM,CAAE,CACrB;AACT,GAAMD,iBAAUS,WAAV,EAAoBC,OAApB,CAAN;;AAEA,GAAI,MAAKR,OAAT,CAAkB;AAChB,MAAKK,KAAL,CAAWM,OAAX,CAAmBb,KAAnB;AACAC;AACA;AACD;;AAED,MAAKF,WAAL,CAAiBC,KAAjB,CAAwBC,QAAxB;AACD,CA1Dc;;AA4DfE,OA5De,CA4DL,UAA0C,IAAzCF,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AAClD,MAAKG,cAAL,CAAoB,UAAM;AACxB,GAAI,CAAC,MAAKG,KAAL,CAAWO,MAAhB,CAAwB;AACtBb;AACA;AACD;;AAED,GAAMC,SAAU,MAAKK,KAAL,CAAWQ,KAAX,EAAhB;AACA,MAAKhB,WAAL,CAAiBG,OAAjB,CAA0BD,QAA1B;AACD,CARD;AASD,CAtEc,CACb,KAAKC,OAAL,CAAe,IAAf,CACA,KAAKK,KAAL,CAAa,EAAb,CACD,C,iBAPkBT,e","file":"SnackBarManager.js","sourcesContent":["import React from 'react'\nimport RootSiblings from 'react-native-root-siblings'\n\nimport type { SnackItemType } from './type'\nimport SnackBar from './SnackBar'\n\nexport default class SnackBarManager {\n  current: SnackItemType\n  queue: Array<SnackItemType>\n\n  constructor () {\n    this.current = null\n    this.queue = []\n  }\n\n  _setCurrent = (props: SnackItemType, callback?: Function = () => {}): void => {\n    this.current = new RootSiblings(<SnackBar {...props} onAutoDismiss={this.dismiss} />, callback)\n  }\n\n  _removeCurrent = (callback?: Function = () => {}): void => {\n    if (!this.current) {\n      callback()\n      return\n    }\n\n    this.current.destroy(() => {\n      this.current = null\n      callback()\n    })\n  }\n\n  get = () => {\n    return {\n      current: this.current,\n      queue: this.queue\n    }\n  }\n\n  add = (\n    title: string,\n    options?: SnackItemType,\n    callback?: Function = () => {}\n  ): void => {\n    const props = { title, ...options }\n\n    if (this.current) {\n      this.queue.push(props)\n      callback()\n      return\n    }\n\n    this._setCurrent(props, callback)\n  }\n\n  show = (\n    title: string,\n    options?: SnackItemType,\n    callback?: Function = () => {}\n  ): void => {\n    const props = { title, ...options }\n\n    if (this.current) {\n      this.queue.unshift(props)\n      callback()\n      return\n    }\n\n    this._setCurrent(props, callback)\n  }\n\n  dismiss = (callback?: Function = () => {}): void => {\n    this._removeCurrent(() => {\n      if (!this.queue.length) {\n        callback()\n        return\n      }\n\n      const current = this.queue.shift()\n      this._setCurrent(current, callback)\n    })\n  }\n}\n"]}