{"version":3,"sources":["../src/SnackBar.js"],"names":["DEFAULT_DURATION","DEFAULT_FADEOUT_DURATION","INITIAL_POSITION","STYLE_BANNER_COLOR","TEXT_COLOR_ACCENT","TIMEOUT_ID","get","width","styles","create","container","flex","position","bottom","text","padding","fontSize","inlineText","buttonContainer","paddingHorizontal","button","fontWeight","actionRow","flexDirection","justifyContent","marginBottom","inlineRow","flat","marginHorizontal","SnackBar","props","show","state","transformOpacity","transformOffsetY","fadeOutDuration","isStatic","duration","parallel","timing","toValue","easing","inOut","quad","start","runAfterInteractions","setTimeout","hide","onAutoDismiss","renderButton","onPress","style","buttonColor","color","renderContent","confirmText","onConfirm","cancelText","onCancel","title","textColor","titleElement","Value","nextProps","isPropsChanged","backgroundColor","opacity","transform","translateY","defaultProps","Function"],"mappings":";;AAEA,4B;AACA,oD;;;AAGA,yC;;;;;;;;;;;AAWA,GAAMA,kBAA2B,IAAjC;AACA,GAAMC,0BAAmC,GAAzC;AACA,GAAMC,kBAA2B,CAAC,GAAlC;;AAEA,GAAMC,oBAA6B,SAAnC;AACA,GAAMC,mBAA4B,SAAlC;;AAEA,GAAMC,YAAqB,UAA3B,C;;AAEkB,wBAAWC,GAAX,CAAe,QAAf,C,CAAVC,K,iBAAAA,K;;AAER,GAAMC,QAAS,wBAAWC,MAAX,CAAkB;AAC/BC,UAAW;AACTC,KAAM,CADG;AAETC,SAAU,UAFD;AAGTC,OAAQX,gBAHC;AAITK,WAJS,CADoB;;;AAQ/BO,KAAM;AACJC,QAAS,EADL;AAEJC,SAAU,EAFN,CARyB;;;AAa/BC,WAAY;AACVD,SAAU,EADA,CAbmB;;;AAiB/BE,gBAAiB;AACfC,kBAAmB,CADJ,CAjBc;;;AAqB/BC,OAAQ;AACNJ,SAAU,EADJ;AAENK,WAAY,KAFN,CArBuB;;;AA0B/BC,UAAW;AACTC,cAAe,KADN;AAETC,eAAgB,UAFP;AAGTT,QAAS,EAHA;AAITU,aAAc,CAJL,CA1BoB;;;AAiC/BC,UAAW;AACTH,cAAe,KADN;AAETC,eAAgB,eAFP;AAGTT,QAAS,EAHA,CAjCoB;;;AAuC/BY,KAAM;AACJX,SAAU,EADN;AAEJY,iBAAkB,EAFd,CAvCyB,CAAlB,CAAf,C;;;;AA6CqBC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BnB,kBAAaC,KAAb,CAAmC;AAC3BA,KAD2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCnCC,IApCmC,CAoC5B,UAAM;;;;AAIP,MAAKC,KAJE,CAETC,gBAFS,aAETA,gBAFS,CAGTC,gBAHS,aAGTA,gBAHS;;;;;;AAUP,MAAKJ,KAVE,CAOTK,eAPS,aAOTA,eAPS,CAQTC,QARS,aAQTA,QARS,CASTC,QATS,aASTA,QATS;;AAYX,sBAASC,QAAT,CAAkB;AAChB,sBAASC,MAAT,CAAgBN,gBAAhB,CAAkC;AAChCO,QAAS,CADuB;AAEhCH,SAAUF,eAFsB;AAGhCM,OAAQ,oBAAOC,KAAP,CAAa,oBAAOC,IAApB,CAHwB,CAAlC,CADgB;;AAMhB,sBAASJ,MAAT,CAAgBL,gBAAhB,CAAkC;AAChCM,QAAStC,gBADuB;AAEhCmC,SAAUF,eAFsB;AAGhCM,OAAQ,oBAAOC,KAAP,CAAa,oBAAOC,IAApB,CAHwB,CAAlC,CANgB,CAAlB;;AAWGC,KAXH,CAWS,UAAM;AACb,GAAIR,QAAJ,CAAc;AACZ;AACD;;AAED,gCAAmBS,oBAAnB,CAAwC,UAAM;AAC5C,2BAAMC,UAAN,CAAiBzC,UAAjB,CAA6B,UAAM;AACjC,MAAK0C,IAAL;AACD,CAFD,CAEGV,QAFH;AAGD,CAJD;AAKD,CArBD;AAsBD,CAtEkC;;AAwEnCU,IAxEmC,CAwE5B,UAAM;;;;AAIP,MAAKf,KAJE,CAETC,gBAFS,cAETA,gBAFS,CAGTC,gBAHS,cAGTA,gBAHS;;;;;AASP,MAAKJ,KATE,CAOTK,eAPS,cAOTA,eAPS,CAQTa,aARS,cAQTA,aARS;;AAWX,sBAASV,QAAT,CAAkB;AAChB,sBAASC,MAAT,CAAgBN,gBAAhB,CAAkC;AAChCO,QAAS,CADuB;AAEhCH,SAAUF,eAFsB;AAGhCM,OAAQ,oBAAOC,KAAP,CAAa,oBAAOC,IAApB,CAHwB,CAAlC,CADgB;;;AAOhB,sBAASJ,MAAT,CAAgBL,gBAAhB,CAAkC;AAChCM,QAAStC,iBAAmB,CAAC,CADG;AAEhCuC,OAAQ,oBAAOC,KAAP,CAAa,oBAAOC,IAApB,CAFwB;AAGhCN,SAAUF,eAHsB,CAAlC,CAPgB,CAAlB;;AAYGS,KAZH,CAYS,UAAM,CAAEI,eAAiBA,eAAjB,CAAkC,CAZnD;AAaD,CAhGkC;;AAkGnCC,YAlGmC,CAkGpB,SAACnC,IAAD,CAAgE,IAAjDoC,QAAiD,2DAA7B,UAAM,CAAE,CAAqB,IAAnBC,MAAmB;AACrEC,WADqE,CACrD,MAAKtB,KADgD,CACrEsB,WADqE;;AAG7E;AACE,6DAAkB,MAAO5C,OAAOU,eAAhC,CAAiD,QAASgC,OAA1D;AACE,iDAAM,MAAO,CAAC1C,OAAOY,MAAR,CAAgB+B,KAAhB,CAAuB,CAAEE,MAAOD,WAAT,CAAvB,CAAb;AACGtC,IADH,CADF,CADF;;;;AAOD,CA5GkC;;AA8GnCwC,aA9GmC,CA8GnB,UAAM;;;;;;;;AAQhB,MAAKxB,KARW,CAElByB,WAFkB,cAElBA,WAFkB,CAGlBC,SAHkB,cAGlBA,SAHkB,CAIlBC,UAJkB,cAIlBA,UAJkB,CAKlBC,QALkB,cAKlBA,QALkB,CAMlBC,KANkB,cAMlBA,KANkB,CAOlBC,SAPkB,cAOlBA,SAPkB;;AAUpB,GAAMC,cAAe,iDAAM,MAAO,CAACrD,OAAOM,IAAR,CAAc,CAAEuC,MAAOO,SAAT,CAAd,CAAb,EAAmDD,KAAnD,CAArB;;AAEA,GAAIJ,aAAeE,UAAnB,CAA+B;AAC7B;AACE;AACGI,YADH;AAEE,iDAAM,MAAOrD,OAAOc,SAApB;AACI,MAAK2B,YAAL,CAAkBQ,UAAlB,CAA8BC,QAA9B,CAAwClD,OAAOmB,IAA/C,CADJ;AAEI,MAAKsB,YAAL,CAAkBM,WAAlB,CAA+BC,SAA/B,CAA0ChD,OAAOmB,IAAjD,CAFJ,CAFF,CADF;;;;AASD;;AAED,GAAI4B,WAAJ,CAAiB;AACf;AACE,iDAAM,MAAO/C,OAAOkB,SAApB;AACE,iDAAM,MAAO,CAAClB,OAAOS,UAAR,CAAoB,CAAEoC,MAAOO,SAAT,CAApB,CAAb,EAAyDD,KAAzD,CADF;AAEI,MAAKV,YAAL,CAAkBM,WAAlB,CAA+BC,SAA/B,CAFJ,CADF;;;AAMD;;AAED,MAAOK,aAAP;AACD,CAhJkC,CAGjC,MAAK7B,KAAL,CAAa,CACXE,iBAAkB,GAAI,uBAAS4B,KAAb,CAAmB,CAAnB,CADP,CAEX7B,iBAAkB,GAAI,uBAAS6B,KAAb,CAAmB,CAAnB,CAFP,CAAb,CAHiC,aAOlC,C,kFAEoB,CACnB,KAAK/B,IAAL,GACD,C,mEAEuB,CACtB,KAAKgB,IAAL,GACD,C,4EAE0BgB,S,CAA0B,YAK/C,KAAKjC,KAL0C,CAEjD6B,KAFiD,QAEjDA,KAFiD,CAGjDJ,WAHiD,QAGjDA,WAHiD,CAIjDE,UAJiD,QAIjDA,UAJiD,CAOnD,GAAMO,gBACJL,QAAUI,UAAUJ,KAApB,EACAJ,cAAgBQ,UAAUR,WAD1B,EAEAE,aAAeM,UAAUN,UAH3B,CAMA,GAAIO,cAAJ,CAAoB,CAClB,KAAKjB,IAAL,GACA,KAAKhB,IAAL,GACD,CACF,C;;AAgHS;AAC2B,KAAKD,KADhC,CACAqB,KADA,SACAA,KADA,CACOc,eADP,SACOA,eADP;;AAGR;AACE,oDAAU,IAAV;AACE,MAAO;AACLzD,OAAOE,SADF;AAEL;AACEwD,QAAS,KAAKlC,KAAL,CAAWC,gBADtB;AAEEkC,UAAW,CAAC,CAAEC,WAAY,KAAKpC,KAAL,CAAWE,gBAAzB,CAAD,CAFb;AAGE+B,+BAHF,CAFK;;AAOLd,KAPK,CADT;;;AAWI,KAAKG,aAAL,EAXJ,CADF;;;AAeD,C,wCA9LkBzB,Q,CAQZwC,Y,CAAe,CAEpBlC,gBAAiBlC,wBAFG,CAGpBoC,SAAUrC,gBAHU,CAIpBoC,SAAU,KAJU,CAOpBoB,UAAWc,QAPS,CAQpBZ,SAAUY,QARU,CASpBtB,cAAesB,QATK,CAYpBnB,MAAO,EAZa,CAapBc,gBAAiB9D,kBAbG,CAcpBiD,YAAahD,iBAdO,CAepBwD,UAAW,OAfS,C,iBARH/B,Q","file":"SnackBar.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react'\nimport Timer from 'react-native-timer'\nimport type { SnackItemType } from './type'\n\nimport {\n  View,\n  Animated,\n  Dimensions,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Easing,\n  InteractionManager\n} from 'react-native'\n\nconst DEFAULT_DURATION: number = 5000\nconst DEFAULT_FADEOUT_DURATION: number = 250\nconst INITIAL_POSITION: number = -180\n\nconst STYLE_BANNER_COLOR: string = '#000000'\nconst TEXT_COLOR_ACCENT: string = '#0088ff'\n\nconst TIMEOUT_ID: string = 'snackBar'\n\nconst { width } = Dimensions.get('window')\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'absolute',\n    bottom: INITIAL_POSITION,\n    width\n  },\n\n  text: {\n    padding: 24,\n    fontSize: 16\n  },\n\n  inlineText: {\n    fontSize: 16\n  },\n\n  buttonContainer: {\n    paddingHorizontal: 4\n  },\n\n  button: {\n    fontSize: 16,\n    fontWeight: '500'\n  },\n\n  actionRow: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    padding: 18,\n    marginBottom: 6\n  },\n\n  inlineRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 18\n  },\n\n  flat: {\n    fontSize: 14,\n    marginHorizontal: 16\n  }\n})\n\nexport default class SnackBar extends Component {\n  state: {\n    transformOffsetY: any,\n    transformOpacity: any\n  }\n\n  props: SnackItemType\n\n  static defaultProps = {\n    // Behaviour\n    fadeOutDuration: DEFAULT_FADEOUT_DURATION,\n    duration: DEFAULT_DURATION,\n    isStatic: false,\n\n    // Functions\n    onConfirm: Function,\n    onCancel: Function,\n    onAutoDismiss: Function,\n\n    // Styles\n    style: {},\n    backgroundColor: STYLE_BANNER_COLOR,\n    buttonColor: TEXT_COLOR_ACCENT,\n    textColor: 'white'\n  }\n\n  constructor (props: SnackItemType) {\n    super(props)\n\n    this.state = {\n      transformOffsetY: new Animated.Value(0),\n      transformOpacity: new Animated.Value(0)\n    }\n  }\n\n  componentDidMount () {\n    this.show()\n  }\n\n  componentWillUnmount () {\n    this.hide()\n  }\n\n  componentWillReceiveProps (nextProps: SnackItemType) {\n    const {\n      title,\n      confirmText,\n      cancelText\n    } = this.props\n\n    const isPropsChanged = (\n      title !== nextProps.title ||\n      confirmText !== nextProps.confirmText ||\n      cancelText !== nextProps.cancelText\n    )\n\n    if (isPropsChanged) {\n      this.hide()\n      this.show()\n    }\n  }\n\n  show = () => {\n    const {\n      transformOpacity,\n      transformOffsetY\n    } = this.state\n\n    const {\n      fadeOutDuration,\n      isStatic,\n      duration\n    } = this.props\n\n    Animated.parallel([\n      Animated.timing(transformOpacity, {\n        toValue: 1,\n        duration: fadeOutDuration,\n        easing: Easing.inOut(Easing.quad)\n      }),\n      Animated.timing(transformOffsetY, {\n        toValue: INITIAL_POSITION,\n        duration: fadeOutDuration,\n        easing: Easing.inOut(Easing.quad)\n      })\n    ]).start(() => {\n      if (isStatic) {\n        return\n      }\n\n      InteractionManager.runAfterInteractions(() => {\n        Timer.setTimeout(TIMEOUT_ID, () => {\n          this.hide()\n        }, duration)\n      })\n    })\n  }\n\n  hide = () => {\n    const {\n      transformOpacity,\n      transformOffsetY\n    } = this.state\n\n    const {\n      fadeOutDuration,\n      onAutoDismiss\n    } = this.props\n\n    Animated.parallel([\n      Animated.timing(transformOpacity, {\n        toValue: 0,\n        duration: fadeOutDuration,\n        easing: Easing.inOut(Easing.quad)\n\n      }),\n      Animated.timing(transformOffsetY, {\n        toValue: INITIAL_POSITION * -1,\n        easing: Easing.inOut(Easing.quad),\n        duration: fadeOutDuration\n      })\n    ]).start(() => { onAutoDismiss && onAutoDismiss() })\n  }\n\n  renderButton = (text: string, onPress: Function = () => {}, style?: Object) => {\n    const { buttonColor } = this.props\n\n    return (\n      <TouchableOpacity style={styles.buttonContainer} onPress={onPress}>\n        <Text style={[styles.button, style, { color: buttonColor }]}>\n          {text}\n        </Text>\n      </TouchableOpacity>\n    )\n  }\n\n  renderContent = () => {\n    const {\n      confirmText,\n      onConfirm,\n      cancelText,\n      onCancel,\n      title,\n      textColor\n    } = this.props\n\n    const titleElement = <Text style={[styles.text, { color: textColor }]}>{title}</Text>\n\n    if (confirmText && cancelText) {\n      return (\n        <View>\n          {titleElement}\n          <View style={styles.actionRow}>\n            { this.renderButton(cancelText, onCancel, styles.flat) }\n            { this.renderButton(confirmText, onConfirm, styles.flat) }\n          </View>\n        </View>\n      )\n    }\n\n    if (confirmText) {\n      return (\n        <View style={styles.inlineRow}>\n          <Text style={[styles.inlineText, { color: textColor }]}>{title}</Text>\n          { this.renderButton(confirmText, onConfirm) }\n        </View>\n      )\n    }\n\n    return titleElement\n  }\n\n  render () {\n    const { style, backgroundColor } = this.props\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          {\n            opacity: this.state.transformOpacity,\n            transform: [{ translateY: this.state.transformOffsetY }],\n            backgroundColor\n          },\n          style\n        ]}\n      >\n        { this.renderContent() }\n      </Animated.View>\n    )\n  }\n}\n"]}